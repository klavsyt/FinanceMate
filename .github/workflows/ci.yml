name: CI

on:
  push:
    branches: [ master, main ]
  pull_request:
    branches: [ master, main ]

jobs:
  build:
    runs-on: ubuntu-latest
    services:
      db_test:
        image: postgres:15
        env:
          POSTGRES_DB: finance_db_test
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
        ports:
          - 5433:5432
        options: >-
          --health-cmd="pg_isready -U postgres"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5
      redis:
        image: redis:7
        ports:
          - 6379:6379
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      - name: Install Poetry
        run: |
          curl -sSL https://install.python-poetry.org | python3 -
          echo "export PATH=$HOME/.local/bin:$PATH" >> $GITHUB_ENV

      - name: Install dependencies
        run: |
          poetry install --no-interaction --no-root

      - name: Create .env file with test variables
        run: |
          cat <<EOF > .env
          SECRET_KEY=testsecret
          ALGORITHM=HS256
          ACCESS_TOKEN_EXPIRE_MINUTES=30
          REFRESH_TOKEN_EXPIRE_DAYS=5
          REDIS_URL=redis://localhost:6379/0
          TEST_DATABASE_URL=postgresql+asyncpg://postgres:postgres@localhost:5433/finance_db_test
          TEST_SYNC_DATABASE_URL=postgresql+psycopg2://postgres:postgres@localhost:5433/finance_db_test
          EOF

      - name: Create .env.test file with test variables
        run: |
          cat <<EOF > .env.test
          SECRET_KEY=testsecret
          ALGORITHM=HS256
          ACCESS_TOKEN_EXPIRE_MINUTES=30
          REFRESH_TOKEN_EXPIRE_DAYS=5
          REDIS_URL=redis://localhost:6379/0
          TEST_DATABASE_URL=postgresql+asyncpg://postgres:postgres@localhost:5433/finance_db_test
          TEST_SYNC_DATABASE_URL=postgresql+psycopg2://postgres:postgres@localhost:5433/finance_db_test
          EOF

      - name: Install docker-compose
        run: |
          sudo apt-get update
          sudo apt-get install -y docker-compose

      - name: Start Docker services
        run: |
          docker-compose up -d db_test redis

      - name: Wait for Postgres
        run: |
          for i in {1..20}; do
            nc -z localhost 5433 && echo "Postgres is up!" && break
            echo "Waiting for Postgres..."
            sleep 3
          done

      - name: Run tests
        run: |
          poetry run pytest tests
